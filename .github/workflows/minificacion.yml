ame: Minificación

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Minify JavaScript
        run: | 
          # Verifica si el archivo de configuración existe
          if [ -f assets/javascriptFilesToMinify.json ]; then
            # Lee el archivo de configuración
            filesToMinify=$(cat assets/javascriptFilesToMinify.json)

            # Verifica si la lista de archivos a minificar está vacía
            if [ -z "$filesToMinify" ]; then
              echo "Error: La lista de archivos a minificar está vacía en assets/javascriptFilesToMinify.json."
              exit 1
            fi

            # Crea el directorio de salida si no existe
            mkdir -p assets/minified

            # Instala Terser
            npm install terser -g

            # Cambia al directorio de assets para que Terser pueda encontrar los archivos
            cd assets

            # Realiza la minificación de JavaScript
            for file in $filesToMinify; do
              # Obtiene el nombre del archivo de salida
              filename=$(basename -- "$file")
              extension="${filename##*.}"
              filename="${filename%.*}"

              # Realiza la minificación
              terser $file -o minified/$filename.min.$extension
            done

            # Vuelve al directorio raíz del repositorio
            cd ..
          else
            echo "Error: El archivo assets/javascriptFilesToMinify.json no existe."
          fi

      - name: Commit Changes
        run: |
          # Añade y realiza un commit de los archivos minificados
          git add assets/minified
          git commit -m "Minify JavaScript"

      - name: Push Changes
        run: |
          # Sube los cambios al repositorio
          git push origin main

      - name: Check Status
        run: |
          # Verifica el estado del repositorio después de realizar el commit y push
          git status
